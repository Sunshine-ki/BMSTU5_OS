[МЕТОДИЧКА]
Virtual mode – специальном режиме защищенного режима (32-разрядный режим работы),
который эмулирует реальный режим работы вычислительной системы на базе процессоров Intel.

Теорема Бёма — Якопини — положение структурного программирования, согласно которому любой исполняемый 
алгоритм может быть преобразован к структурированному виду, то есть такому виду, когда ход его выполнения
определяется только при помощи трёх структур управления: последовательной (англ. sequence),
ветвлений (англ. selection) и повторов или циклов (англ. iteration).

Дополнительно (но на семинаре что-то про это говорила, может спросить...)
Проблема: между процессором и памятью есть высокосткоростная шина, через которую они общаются, но 
внешние устройства не могут знать, какие данные передаются по этой шине. 
Решения:
1. Система с несколькими шинами. Процессор все так же по скоростной общается с памятью, но при
этом информация дублируется (?) по другим шинам, чтобы внешние устройства могли знать, что происходит
(решение работоспособное, но усложняет архитектуру)
2. Следящее устройство на быстрой шине. Есть проблема: порты ввода-вывода внешних устройств могут
не успеть так же быстро все обрабатывать.
3. Фильтрация адресов микросхемой моста PCI: диапазон адресов помечается как не относящейся к памяти и тогда
все адреса, попадающие в подобный диапазон, идут на шину PCI (а не на высокоскоростную; так предупреждаем внешние
устройства). Недостаток - необходимость распределения памяти во время загрузки.

[СЕМИНАР]
Префиксная команда lock - делает команду, следующую за ней, неделимой (технически: блокирует локальную 
шину памяти)

3 функции int 8h
1. Инкремент счетчика вермени в области данных биос (2 слова). Находится в оперативной памяти.
2. Вызов пользовательских прерываний 1Ch
3. Декремент счетчика времени до отключения моторчика дисковода (когда значение счетчика = 0 в порт
дисководапосылается команда для отключения дисковода (НЕ СИГНАЛ); посылается сигнал "контроллеру железки")

Способы работы с внешними устройствами:
1. memory mapping - использование команд работы с памятью (mov)
2. io mapping - использование команд работы с io (in/out)


[frolov-lib]

Действия прерывания:
1. Обработчик int 8h каждый раз увеличивает 4байтовую переменную по адресу 0000:046Сh (в области данных BIOS) - 
счетчик таймера. Переполняется спустя 24 часа - в 0000:0470h заносится значение 1.
2. Декремент по адресу 0000:0440h - время, оставшееся до выключения НГМД (накопитель на гибких магнитных дисках).
когда = 0, двигатель отключается.
3. Вызов прерывания 1Ch. "После инициализации системы вектор указывает на iret, то есть ничего не делает".
Программа может установить свой обработчик, чтобы делать периодические действия ("необходимо отметить,
что" 1Ch вызывается до сброса контроллера прерываний, никакие аппаратные прерывания не отвлекут, да..)

Если пишем свой 1Ch, перед завершение надо сбросить контроллер прерываний:
mov al, 20h
out 20h, al


МИКРОСХЕМЫ 8253 И 8254

Регистры:
состояния канала RS (8 разрядов) (описывает состояние, про состояние см. ниже)
управляющего слова RSW (8 разрядов) (описывает режим работы, см. ниже)
буферный регистр OL (16 разрядов) - буферный; запоминает CE, позволяет читать, без остановки процесса счета
(посредник, позволяет читать CE)
регистр счетчика CE (16 разрядов) - счетчик, работает в режиме вычитания. Уменьшается по "заднему фронту CLOCK'A"
если GATE = 1.
регистр констант пересчета CR (16 разрядов) - загружается в CE, если CE нужно обновить (дошло до 0, например,
и требуется запустить еще раз; посредник, позволяет записать нужное значение в CE)

Каналы подключаются к внешним устройствам при помощи трех линий:
GATE - управляющий вход; (считает ли CE или нет)
CLOCK - вход тактовой частоты (принимает от кварцовых генераторов сигналы)
OUT - выход таймера (таймер подает сигнал через эту линию, когда CE = 0)

Режимы (6 штук, но делятся на 3 типа):
1. Режим однократного выполнения функций (режимы 0, 4)
    Если GATE = 1, то в CE (счетчик) пишем CR (посредник, через которого записываем). Далее, пока GATE = 1,
    счетчик будет уменьшаться (GATE = 0 - приостановится) и подаст сигнал, когда CE = 0. для повторения
    надо перепрограммировать таймер.
2. Работа с перезапуском (режимы 1, 5)
    Не требует повторного программирования. "По фронту сигнала GATE" (видимо 0 -> 1) CR пишется в CE и,
    грубо говоря, счет начинается заново
3. Режим автозагрузки (режимы 2, 3)
    Когда CE становится 0, он автоматически обновляется значением из CR. Если GATE = 1, то OUT будет 
    сигнализировать, когда CE = 0. Используется для создания программируемых импульсных генераторов.

Каналы таймера (не путать с тем, что было выше, кажется, это разное!):
Канал 0 - используется в системных часах времени суток (не следует путать с часами реального времени,
реализованными на другой микросхеме). Этот канал работает в режиме 3 и используется как генератор импульсов с
частотой примерно 18,2 Гц. Именно эти импульсы вызывают аппаратное прерывание INT 8h.
Канал 1 - используется для регенерации содержимого динамической памяти компьютера. Выход канала OUT используется
для запроса к каналу прямого доступа DMA, который и выполняет обновление содержимого памяти. Вам не следует
перепрограммировать этот канал, так как это может привести к нарушениям в работе основной оперативной памяти
компьютера.
Канал 2 - подключен к громкоговорителю компьютера и может быть использован для генерации различных звуков или
музыки, либо как генератор случайных чисел. Канал использует режим 3 таймеров 8253 и 8254.

ЗАЧЕМ ЭТО ВСЕ НУЖНО?
1. Можно повысить частоту импульсов, чтобы точнее мерить время.
2. Канал 2 (с музыкой), можно использовать для генерации случайных чисел.

